Q1-> Maximum meetings (https://www.codingninjas.com/codestudio/problems/1062658?topList=striver-sde-sheet-problems&utm_source=striver&utm_medium=website&leftPanelTab=0)
#include <bits/stdc++.h>
vector<int> maximumMeetings(vector<int> &start, vector<int> &end) {
    // Write your code here.
        vector<pair<int,pair<int,int>>> arr;
    int n=start.size();
        for(int i=0;i<n;i++)
        {
            arr.push_back({start[i],{end[i],i}});
        }
        sort(arr.begin(),arr.end());
        pair<int,pair<int,int>> prev=arr[0];
    vector<int> ans;
        int count=0;
        for(int i=1;i<n;i++)
        {
            if(prev.second.first<arr[i].first)
            {
                count++;
                ans.push_back(prev.second.second+1);
                prev=arr[i];

            }
            else if(prev.second.first>arr[i].second.first)
            {
                prev=arr[i];
            }
            else
            {
                if(prev.second.first==arr[i].second.first)
                {
                    if(prev.second.second>arr[i].second.second)
                        prev=arr[i];
                }
            }
        }
    ans.push_back(prev.second.second+1);

    return ans;
}


Q2-> Minimum Platforms (https://practice.geeksforgeeks.org/problems/minimum-platforms-1587115620/1#)
  int findPlatform(int arr[], int dep[], int n)
    {
    	// Your code here
    	sort(arr,arr+n);
    sort(dep,dep+n);
 
    int ans=1;
    int count=1;
    int i=1,j=0;
    while(i<n && j<n)
    {
        if(arr[i]<=dep[j]) 
        {
            count++;
            i++;
        }
        else 
        {
            count--;
            j++;
        }
        ans=max(ans,count); 
    }
    return ans;
    }

Q3-> Job Sequencing Problem (https://practice.geeksforgeeks.org/problems/job-sequencing-problem-1587115620/1#)
     bool static comparison(Job a, Job b) {
         return (a.profit > b.profit);
      }
   //Function to find the maximum profit and the number of jobs done
   vector<int> JobScheduling(Job arr[], int n) {

      sort(arr, arr + n, comparison);
      int maxi = arr[0].dead;
      for (int i = 1; i < n; i++) {
         maxi = max(maxi, arr[i].dead);
      }

      int slot[maxi + 1];

      for (int i = 0; i <= maxi; i++)
         slot[i] = -1;

      int countJobs = 0, jobProfit = 0;

      for (int i = 0; i < n; i++) {
         for (int j = arr[i].dead; j > 0; j--) {
            if (slot[j] == -1) {
               slot[j] = i;
               countJobs++;
               jobProfit += arr[i].profit;
               break;
            }
         }
      }

      return {countJobs, jobProfit};
   }


Q4-> Fractional Knapsack(https://practice.geeksforgeeks.org/problems/fractional-knapsack-1587115620/1)
  static bool compare(Item i1,Item i2)
    {
        return ((double)(i1.value)/(double)i1.weight) >( (double)i2.value/(double)i2.weight);
    }
    double fractionalKnapsack(int w, Item arr[], int n)
    {
        // Your code here
        sort(arr,arr+n,compare);
        double ans=0;
        for(int i=0;i<n&&w>0;i++)
        {
            if(w>=arr[i].weight)
            {
                ans+=arr[i].value;
                w=w-arr[i].weight;
            }
            else
            {
                ans=ans+((double)arr[i].value)*(w)/((double)arr[i].weight);
                break;
            }
        }
        return ans;
    }


Q5-> Find Minimum Number Of Coins (https://www.codingninjas.com/codestudio/problems/975277?topList=striver-sde-sheet-problems&utm_source=striver&utm_medium=website&leftPanelTab=0)
int findMinimumCoins(int amount) 
{
    // Write your code here
    int count=0;
    vector<int> coin{1,2,5,10,20,50,100,500,1000};
    for(int i=8;i>=0&& amount>0;i--)
    {
        while(amount>=coin[i])
        {
            count++;
            amount-=coin[i];
        }
    }
    return count;
}


Q6-> same as question1
